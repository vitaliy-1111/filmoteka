{"version":3,"sources":["js/genres.js","js/template.js","index.js"],"names":["genre","id","name","homePage","libraryPage","refs","homePageLinkEl","document","querySelector","libraryPageLinkEl","headerEl","body","textSearchResult","nav","searhFormEl","gallery","galleryListEl","addEventListener","onLibraryPageLinkEl","onHomePageLinkEl","watchedList","queueList","fetchMovie","media","fetch","then","resp","json","console","log","results","listMovies","map","movie","poster_path","title","genre_ids","release_date","first_air_date","innerHTML","join","addToWatched","e","addToQueue","preventDefault","classList","add","remove","renderGallery","JSON","parse","localStorage","getItem","onBody","target","contains","previousElementSibling","nextElementSibling","find","item","push","setItem","stringify","movies","genres"],"mappings":"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","file":"src.091c99e0.js","sourceRoot":"../src","sourcesContent":["export const genre = [\n{id: 28, name: 'Action'},\n{id: 12, name: 'Adventure'},\n{id: 16, name: 'Animation'},\n{id: 35, name: 'Comedy'},\n{id: 80, name: 'Crime'},\n{id: 99, name: 'Documentary'},\n{id: 18, name: 'Drama'},\n{id: 10751, name: 'Family'},\n{id: 14, name: 'Fantasy'},\n{id: 36, name: 'History'},\n{id: 27, name: 'Horror'},\n{id: 10402, name: 'Music'},\n{id: 9648, name: 'Mystery'},\n{id: 10749, name: 'Romance'},\n{id: 878, name: 'Science Fiction'},\n{id: 10770, name: 'TV Movie'},\n{id: 53, name: 'Thriller'},\n{id: 10752, name: 'War'},\n{id: 37, name: 'Western'},\n]","export const homePage = `<form class=\"search-form\">\n      <input class=\"search-form__input\" placeholder=\"Search films\"></input>\n      <button class=\"search-form__button\" type=\"submit\">\n        <svg class=\"icon-search\" width=\"12\" height=\"12\">\n          <use href=\"./images/icons.svg#icon-search\"></use>\n        </svg>\n      </button>\n    </form>\n    <p class=\"visually-hidden search-result-text\">\n      Search result not successful. Enter the correct movie name and try\n      again\n    </p>`;\nexport const libraryPage = `\n    <button class=\"button library-button library-button--active library-button--watched\">Watched</button>\n    <button class=\"button library-button--queue\">Queue</button>\n    <p class=\"visually-hidden search-result-text\">\n      Search result not successful. Enter the correct movie name and try\n      again\n    </p>\n  `;\n\n","\nimport './sass/main.scss';\nimport './js/genres.js';\n// import './js/filmoteka.js';\nimport { homePage, libraryPage } from './js/template.js';\nconst refs = {\n  homePageLinkEl: document.querySelector(\"a.home-link\"),\n  libraryPageLinkEl: document.querySelector(\"a.library-link\"),\n  headerEl: document.querySelector(\"header.page-header\"),\n  body: document.querySelector(\"body\"),\n  textSearchResult: document.querySelector(\"p.search-result-text\"),\n  nav: document.querySelector(\"nav.nav\"),\n  searhFormEl: document.querySelector(\"form.search-form\"),\n  gallery: document.querySelector(\".cinema-gallery\"),\n  galleryListEl: document.querySelector(\".cinema-gallery__list\"),  \n}\nrefs.libraryPageLinkEl.addEventListener(\"click\", onLibraryPageLinkEl);\nrefs.homePageLinkEl.addEventListener(\"click\", onHomePageLinkEl);\n\nlet watchedList = [];\nconst queueList = [];\n\nfetchMovie(\"movie\");\n\nfunction fetchMovie(media) {\n  fetch(`https://api.themoviedb.org/3/trending/${media}/day?api_key=c54b9b3bc824900bd0fc655039f09ff1`).then(resp => resp.json()).then(resp => {\n    console.log(resp);\n    console.log(resp.results);\n    const listMovies = resp.results;\n    const gallery = listMovies.map(movie => `<li class=\"cinema-gallery__item\">\n        <div class=\"thumb-img\">\n          <img class=\"cinema-gallery__img img\" src=\" https://image.tmdb.org/t/p/w500${movie.poster_path}\" id=\"${movie.id}\">\n           <div class=\"button-wrap\">\n            <button class=\"button button-watched\" id=\"${movie.id}\">Watched</button>\n            <button class=\"button button-queue\" id=\"${movie.id}\">Queue</button>\n          </div>\n        </div>\n        <div class=\"thumb-text\">\n          <p class=\"cinema-gallery__name\">${movie.name || movie.title}</p>\n          <p class=\"cinema-gallery__text\">${movie.genre_ids} | ${movie.release_date || movie.first_air_date}</p>\n        </div>`);    \n    refs.galleryListEl.innerHTML = gallery.join(\"\");\n  })\n}\n\n\nfunction addToWatched(e) {\n  console.log(\"add to watch\")\n}\nfunction addToQueue(e) {\n  console.log(\"add to queue\")\n}\n\nfunction onLibraryPageLinkEl(e) {\n  e.preventDefault();\n  document.querySelector(\"header\").classList.add(\"page-header--library\");\n  refs.homePageLinkEl.classList.remove(\"home-link--current\");\n  refs.libraryPageLinkEl.classList.add(\"library-link--current\"); \n  refs.searhFormEl.innerHTML = libraryPage;\n\n  const localMovies = JSON.parse(localStorage.getItem(\"watchedList\"));\n  renderGallery(localMovies);\n}\n\nfunction onHomePageLinkEl(e) {\n  e.preventDefault();\n  document.querySelector(\"header\").classList.remove(\"page-header--library\")\n  refs.libraryPageLinkEl.classList.remove(\"library-link--current\")\n  refs.homePageLinkEl.classList.add(\"home-link--current\")\n  refs.searhFormEl.innerHTML = homePage;\n  fetchMovie(\"movie\")\n}\n\ndocument.querySelector(\"body\").addEventListener(\"click\", onBody);\n\nfunction onBody(e) {\n   e.preventDefault();\n  if (e.target.classList.contains(\"library-button--queue\")) {\n   \n    e.target.classList.add(\"library-button--active\")\n    e.target.previousElementSibling.classList.remove(\"library-button--active\");\n    console.log(e.target.previousElementSibling)\n    const localMovies = JSON.parse(localStorage.getItem(\"queueList\"));\n    renderGallery(localMovies);\n  }\n  if (e.target.classList.contains(\"library-button--watched\")) {\n    e.target.classList.add(\"library-button--active\")\n    e.target.nextElementSibling.classList.remove(\"library-button--active\");\n     console.log(e.target)\n      const localMovies = JSON.parse(localStorage.getItem(\"watchedList\"));\n       renderGallery(localMovies);\n  }\n\n  if (e.target.classList.contains(\"button-watched\")) {\n    console.log(e.target);\n    console.log(e.target.id);\n    \n\n    fetch(`https://api.themoviedb.org/3/movie/${e.target.id}?api_key=c54b9b3bc824900bd0fc655039f09ff1&language=en-US`)\n      .then(resp => resp.json())\n      .then(resp => { \n        if (!(watchedList.find(item => item.id == resp.id) && true) || false) {\n          watchedList.push(resp);\n        }\n\n        // watchedList.includes(resp) ? watchedList.push(resp) : watchedList;\n        // watchedList = watchedList.map((movie) => {\n        //   Number(movie.id) !== Number(resp.id) ? resp : movie;\n        // })\n      \n        \n        // watchedList = watchedList.map((movie) => Number(movie.id) === Number(e.target.id) ? { ...movie} : movie);\n\n        //  todos = todos.map((todo) =>todo.id === id ? {...todo, checked: !todo.checked,} : todo, );\n\n        console.log(resp);\n        console.log(watchedList);\n      \n      localStorage.setItem(\"watchedList\", JSON.stringify(watchedList));\n    })\n  }\n\n  if (e.target.classList.contains(\"button-queue\")) {\n    console.log(e.target.id);\n    fetch(`https://api.themoviedb.org/3/movie/${e.target.id}?api_key=c54b9b3bc824900bd0fc655039f09ff1&language=en-US`).then(resp => resp.json()).then(resp => {\n      queueList.push(resp);\n      localStorage.setItem(\"queueList\", JSON.stringify(queueList));\n    })\n    // console.log(e.target.classList.contains(\"library-button--queue\"))\n  }\n}\n\nfunction renderGallery(movies) {\n         const gallery = movies.map(movie => `<li class=\"cinema-gallery__item\">\n       <div class=\"thumb-img\">\n          <img class=\"cinema-gallery__img img\" src=\" https://image.tmdb.org/t/p/w500${movie.poster_path}\" id=\"${movie.id}\">\n          <div class=\"button-wrap\">\n            <button class=\"button button-watched\" id=\"${movie.id}\">Watched</button>\n            <button class=\"button button-queue\" id=\"${movie.id}\">Queue</button>\n          </div>\n      </div>\n       <div class=\"thumb-text\">\n          <p class=\"cinema-gallery__name\">${movie.name || movie.title}</p>\n         <p class=\"cinema-gallery__text\">${movie.genres.map(genre => genre.name) } | ${movie.release_date || movie.first_air_date}</p>\n        </div>`);\n      refs.galleryListEl.innerHTML = gallery.join(\"\");\n  \n}\n// import fetch from \"./js/filmoteka.js\";\n\n// fetch();"]}